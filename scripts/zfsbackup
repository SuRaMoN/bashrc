#!/usr/bin/make -f

SHELL=bash
CONFIG_PATH=$(HOME)/.zfsbackup
THIS_FILE=$(lastword $(MAKEFILE_LIST))

default:
	echo "Usage:"
	echo -e "\tzfsbackup backup"
	echo -e "\tzfsbackup snapshot"
	echo -e "\tzfsbackup send"
	echo -e "\tzfsbackup receive"
	echo -e "\tzfsbackup diff"
	echo -e "\tzfsbackup diff-size"

backup: $(CONFIG_PATH)
	@$(MAKE) -s -f "$(THIS_FILE)" snapshot
	@$(MAKE) -s -f "$(THIS_FILE)" zfsbackup send

snapshot: $(CONFIG_PATH)
	@source "$(CONFIG_PATH)" && sudo zfs snapshot "$$FILESYSTEM@zfsbackup-$$(date +"%Y-%m-%d-%H-%M-%S")"

diff: $(CONFIG_PATH)
	@source "$(CONFIG_PATH)" && set -o pipefail && \
	LAST_BACKUP="$$(sudo zfs list -t snapshot -o name -H -d 1 -r "$$FILESYSTEM" | sort -r | head -n 1 | grep .)" && \
	sudo zfs diff "$$LAST_BACKUP" "$$FILESYSTEM"

send: $(CONFIG_PATH)
	source "$(CONFIG_PATH)" && set -o pipefail && \
	$(MAKE) -s -f "$(THIS_FILE)" to-send | while read DIFF; do \
		set -e && \
		$(MAKE) -s -f "$(THIS_FILE)" send-snap "DIFF=$$DIFF"; \
	done

to-send: $(CONFIG_PATH)
	@source "$(CONFIG_PATH)" && set -o pipefail && \
	sudo zfs list -t snapshot -o name -H -d 1 -r "$$FILESYSTEM" | sed -e '/@zfsbackup-/!d' -e "s/.*@zfsbackup-//" | awk '{print a"..."$$0 } {a=$$0}' | sort > /tmp/zfsbackup.1 && \
	ssh -n -S none "$$SSH_USER@$$HOST" "ls -A1 '$$SSH_DIR'" | sort > /tmp/zfsbackup.2 && \
	comm -23 /tmp/zfsbackup.1 /tmp/zfsbackup.2; \
	rm -f /tmp/zfsbackup.1 /tmp/zfsbackup.2

send-snap: $(CONFIG_PATH)
	@source "$(CONFIG_PATH)" && set -o pipefail && \
	echo "Sending data from interval $$DIFF"; \
	if [[ "$$DIFF" == ...* ]]; then \
		SEND_FILESYSTEM="$$FILESYSTEM@zfsbackup-$${DIFF#...}"; \
	else \
		SEND_FILESYSTEM="-i $$FILESYSTEM@zfsbackup-$${DIFF%...*} $$FILESYSTEM@zfsbackup-$${DIFF#*...}"; \
	fi && \
	export PASSWORD && \
	if ssh -n -S none "$$SSH_USER@$$HOST" "test -f '$$SSH_DIR/$$DIFF.trans'"; then \
		CONFIG=$$(ssh -n -S none "$$SSH_USER@$$HOST" "dd if='$$SSH_DIR/$$DIFF.trans' bs=1024 count=1 status=none" | \
			openssl enc -aes256 -pass env:PASSWORD -d -P | tr -d ' ') && \
		source <(echo "$$CONFIG") && \
		SKIP="$$(ssh -n -S none "$$SSH_USER@$$HOST" "stat -c '%s' '$$SSH_DIR/$$DIFF.trans'")" && \
		SKIP=$$(( SKIP / 1024 )) && \
		sudo echo -n && \
		sudo zfs send $$SEND_FILESYSTEM | pv | \
			gzip -n | openssl enc -aes256 -pass env:PASSWORD -S $$salt -iv $$iv | \
			dd bs=1024 skip=$$SKIP | pv -qL 1m | \
			ssh -S none -o Compression=no "$$SSH_USER@$$HOST" "dd of='$$SSH_DIR/$$DIFF.trans' bs=1024 seek=$$SKIP status=none"; \
	else \
		sudo echo -n && \
		sudo zfs send $$SEND_FILESYSTEM | pv | \
			gzip -n | openssl enc -aes256 -pass env:PASSWORD | \
			ssh -S none -o Compression=no "$$SSH_USER@$$HOST" "dd of='$$SSH_DIR/$$DIFF.trans' status=none"; \
	fi && \
	ssh -n -S none "$$SSH_USER@$$HOST" "mv '$$SSH_DIR/$$DIFF.trans' '$$SSH_DIR/$$DIFF'"

receive: $(CONFIG_PATH)
	@source "$(CONFIG_PATH)" && set -o pipefail && \
	$(MAKE) -s -f "$(THIS_FILE)" to-receive | while read DIFF; do \
		set -e && \
		$(MAKE) -s -f "$(THIS_FILE)" receive-snap "DIFF=$$DIFF"; \
	done

to-receive: $(CONFIG_PATH)
	@source "$(CONFIG_PATH)" && set -o pipefail && \
	ssh -n -S none "$$SSH_USER@$$HOST" "ls -A1 '$$SSH_DIR'" | sed -e '/salt/d' | sort

receive-snap:
	@source "$(CONFIG_PATH)" && set -o pipefail && \
	echo "Receiving data from interval $$DIFF"; \
	if [[ "$$DIFF" == ...* ]]; then \
		RECEIVE_FILESYSTEM="$$FILESYSTEM@zfsbackup-$${DIFF#...}"; \
	else \
		RECEIVE_FILESYSTEM="$$FILESYSTEM@zfsbackup-$${DIFF#*...}"; \
	fi && \
	sudo echo -n && \
	export PASSWORD && \
	ssh -n -S none -o Compression=no "$$SSH_USER@$$HOST" "dd if='$$SSH_DIR/$$DIFF' status=none" | \
		openssl enc -d -aes256 -pass env:PASSWORD | gzip -d | pv | \
		sudo zfs receive "$$RECEIVE_FILESYSTEM"

$(CONFIG_PATH):
	@echo "Error: no confog file found. Run 'zfsbackup init' to create your config file"
	exit 1

init:
	@if [[ ! -f "$(CONFIG_PATH)" ]]; then \
		read -p "SSH host: " HOST && \
		read -p "SSH directory: " SSH_DIR && \
		ssh "$$HOST" "echo testing remote SSH connection" && \
		if ssh "$$HOST" "test -f '$$SSH_DIR/salt'"; then \
			SALT="$$(ssh "$$HOST" "cat '$$SSH_DIR/salt'")"; \
		else \
			SALT="$$(openssl rand -hex 10)" && \
			ssh "$$HOST" "mkdir -p '$$SSH_DIR'" && \
			ssh "$$HOST" "cat > '$$SSH_DIR/salt' <<< '$$SALT'"; \
		fi && \
		read -p "ZFS filesystem name (zpool/...): " FILESYSTEM && \
		PASSWORD=$$(openssl passwd -1 -salt $$SALT | md5sum | grep -o '[0-9a-z]*') && \
		echo -n "Repeat " && \
		REPEATED_PASSWORD=$$(openssl passwd -1 -salt $$SALT | md5sum | grep -o '[0-9a-z]*') && \
		if [[ "$$PASSWORD" != "$$REPEATED_PASSWORD" ]]; then echo "Passwords don't match"; exit 1; fi && \
		printf 'HOST=%q\nSSH_DIR=%q\nFILESYSTEM=%q\nPASSWORD=%q\nSALT=%q\nSSH_USER=%q' "$$HOST" "$$SSH_DIR" "$$FILESYSTEM" "$$PASSWORD" "$$SALT" "$$USER" > "$(CONFIG_PATH)"; \
	fi
 
